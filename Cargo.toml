[package]
name = "imagequant"
version = "4.5.0"
description = "Convert 24/32-bit images to 8-bit palette with alpha channel.\nFor lossy PNG compression and high-quality GIF images\nDual-licensed like pngquant. See https://pngquant.org for details."
authors = ["Kornel LesinÃÅski <kornel@pngquant.org>"]
license = "GPL-3.0-or-later"
homepage = "https://pngquant.org/lib"
repository = "https://github.com/ImageOptim/libimagequant"
documentation = "https://docs.rs/imagequant"
categories = ["multimedia::images"]
keywords = ["quantization", "palette", "pngquant", "compression", "gif"]
include = ["COPYRIGHT", "src/*.rs", "*.h", "README.md", "Cargo.toml"]
readme = "README.md"
edition = "2021"
rust-version = "1.65"

[features]
default = ["threads", "std"]

# libimagequant makes good use of multi-threading, so disabling threads has a significant performance peanalty
threads = ["dep:rayon", "dep:thread_local", "std"]

# supports up to 2048 colors for palettes, but NOT FOR REMAPPING
large_palettes = []

# To opt-in you must disable the default features to disable `std` and `threads`, and also enable `no_std`
std = []
no_std = ["dep:hashbrown"]

# this is private and unstable for imagequant-sys only, do not use
_internal_c_ffi = []

[profile.release]
debug = false
strip = true
panic = "abort"

[profile.dev]
panic = "abort"

[lib]
doctest = false

[dependencies]
arrayvec = { version = "0.7.4", default-features = false }
rgb = { version = "0.8.47", default-features = false, features = ["bytemuck"] }
rayon = { version = "1.10.0", optional = true }
thread_local = { version = "1.1.8", optional = true }
# Used only in no_std
hashbrown = { version = "0.15.4", optional = true, default-features = false }

[dev-dependencies]
lodepng = "3.10"

[workspace]
members = ["imagequant-sys", "imagequant-sys/c_test"]

[package.metadata.release]
consolidate-commits = true
tag-message = ""
tag-prefix = ""
tag-name = "{{version}}"
